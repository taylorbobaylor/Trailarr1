import { useState, useEffect } from "react"; import MovieGrid from "@/components/movie/MovieGrid/MovieGrid"; interface Movie { id: number; title: string; year: number; posterPath?: string; trailerUrl?: string; } export default function MoviesPage() { const [movies, setMovies] = useState<Movie[]>([]); const [selectedMovies, setSelectedMovies] = useState<number[]>([]); const [isLoading, setIsLoading] = useState(true); useEffect(() => { // Fetch movies from API const fetchMovies = async () => { try { const response = await fetch("/api/movies"); const data = await response.json(); setMovies(data.movies); } catch (error) { console.error("Failed to fetch movies:", error); } finally { setIsLoading(false); } }; fetchMovies(); }, []); const handleMovieSelect = (movieId: number) => { setSelectedMovies((prev) => prev.includes(movieId) ? prev.filter((id) => id !== movieId) : [...prev, movieId]); }; const handleSelectAll = () => { setSelectedMovies((prev) => prev.length === movies.length ? [] : movies.map((movie) => movie.id)); }; if (isLoading) { return ( <div className="flex items-center justify-center h-[calc(100vh-4rem)]"> <div className="animate-spin rounded-full h-12 w-12 border-4 border-theme-blue border-t-transparent"></div> </div> ); } return ( <div className="min-h-[calc(100vh-4rem)]"> <MovieGrid movies={movies} selectedMovies={selectedMovies} onMovieSelect={handleMovieSelect} onSelectAll={handleSelectAll} /> </div> ); }
