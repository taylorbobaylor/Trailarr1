$hoverScale: 1.05;

.content {
  transition: all 200ms ease-in;

  &:hover {
    z-index: 2;
    box-shadow: 0 0 12px var(--black);
    transition: all 200ms ease-in;

    .controls {
      opacity: 0.9;
      transition: opacity 200ms linear 150ms;
    }
  }
}

.posterContainer {
  position: relative;
}

.poster {
  position: relative;
  display: block;
  background-color: var(--defaultColor);
}

.overlayTitle {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 5px;
  width: 100%;
  height: 100%;
  color: var(--offWhite);
  text-align: center;
  font-size: 20px;
}

.title {
  @add-mixin truncate;

  background-color: var(--movieBackgroundColor);
  text-align: center;
  font-size: $smallFontSize;
}

.toggleMonitoredContainer {
  position: absolute;
  top: 10px;
  z-index: 3;
}

.monitorToggleButton {
  composes: toggleButton from '~Components/MonitorToggleButton.css';

  width: 25px;
  color: var(--white);

  &:hover {
    color: var(--iconButtonHoverLightColor);
  }
}

.controls {
  position: absolute;
  bottom: 10px;
  left: 10px;
  z-index: 3;
  border-radius: 4px;
  background-color: #707070;
  color: var(--white);
  font-size: $smallFontSize;
  opacity: 0;
  transition: opacity 0;
}

.action {
  composes: button from '~Components/Link/IconButton.css';

  &:hover {
    color: var(--iconButtonHoverLightColor);
  }
}

@media only screen and (max-width: $breakpointSmall) {
  .container {
    padding: 5px;
  }
}

.externalLinks {
  margin: 0 2px;
}

.externalLinkLabel {
  composes: label from '~Components/Label.css';

  cursor: pointer;
}
