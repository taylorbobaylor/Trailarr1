interface Movie { id: number; title: string; year: number; posterPath?: string; trailerUrl?: string; } interface MovieGridProps { movies: Movie[]; selectedMovies: number[]; onMovieSelect: (movieId: number) => void; onSelectAll: () => void; } export default function MovieGrid({ movies, selectedMovies, onMovieSelect, onSelectAll }: MovieGridProps) { return ( <div className="p-6"> <div className="flex items-center justify-between mb-6"> <h1 className="text-2xl font-semibold text-theme-light">Movies</h1> <button onClick={onSelectAll} className="btn btn-primary"> {selectedMovies.length === movies.length ? "Deselect All" : "Select All"} </button> </div> <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-6"> {movies.map((movie) => ( <MovieCard key={movie.id} movie={movie} isSelected={selectedMovies.includes(movie.id)} onSelect={() => onMovieSelect(movie.id)} /> ))} </div> </div> ); }
