import { Film, Settings, Calendar, Activity, Search as SearchIcon, AlertTriangle } from "lucide-react"; import Link from "next/link"; import { usePathname } from "next/navigation"; interface PageSidebarProps { isVisible: boolean; onClose: () => void; } const navigationLinks = [ { icon: Film, title: "Movies", path: "/", children: [ { title: "Add New", path: "/movies/add" }, { title: "Library", path: "/movies/library" } ] }, { icon: Calendar, title: "Calendar", path: "/calendar" }, { icon: Activity, title: "Activity", path: "/activity" }, { icon: AlertTriangle, title: "Wanted", path: "/wanted" }, { icon: Settings, title: "Settings", path: "/settings" } ]; export default function PageSidebar({ isVisible, onClose }: PageSidebarProps) { const pathname = usePathname(); const isActive = (path: string) => { if (path === "/") { return pathname === path; } return pathname.startsWith(path); }; return ( <aside className={`fixed inset-y-0 left-0 z-20 w-64 bg-[var(--themeDarkColor)] border-r border-gray-700 transform transition-transform duration-200 ease-in-out ${isVisible ? "translate-x-0" : "-translate-x-full"} md:translate-x-0`}> <nav className="h-full pt-16 overflow-y-auto"> <ul className="space-y-1 px-3 py-4"> {navigationLinks.map((link) => ( <li key={link.path} className="mb-2"> <div className="flex flex-col"> <Link href={link.path} className={`flex items-center px-4 py-2 rounded-lg transition-colors ${isActive(link.path) ? "bg-[var(--themeBlue)] text-white" : "text-gray-300 hover:bg-[var(--themeBlue)]"}`}> <link.icon className="w-5 h-5 mr-3" /> <span>{link.title}</span> </Link> {link.children && ( <ul className="ml-8 mt-1 space-y-1"> {link.children.map((child) => ( <li key={child.path}> <Link href={child.path} className={`flex items-center px-4 py-2 text-sm rounded-lg transition-colors ${isActive(child.path) ? "bg-[var(--themeBlue)] text-white" : "text-gray-400 hover:bg-[var(--themeBlue)]"}`}> {child.title} </Link> </li> ))} </ul> )} </div> </li> ))} </ul> </nav> {!isVisible && <div className="md:hidden fixed inset-0 bg-black bg-opacity-50 z-10" onClick={onClose} />} </aside> ); }
